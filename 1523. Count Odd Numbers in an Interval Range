
Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).

 

Example 1:

Input: low = 3, high = 7
Output: 3
Explanation: The odd numbers between 3 and 7 are [3,5,7].
Example 2:

Input: low = 8, high = 10
Output: 1
Explanation: The odd numbers between 8 and 10 are [9].


logic:
/*
If N is even then the count of both odd and even numbers will be N/2.
If N is odd,
If L or R is odd, then the count of odd number will be N/2 + 1 and even numbers = N – countofOdd.
Else, count of odd numbers will be N/2 and even numbers = N – countofOdd.
*/

class Solution {
    public int countOdds(int low, int high) {
      int n = high-low+1;
        if(n%2==0) return n/2;
        if(low %2==1 || high %2 ==1){
            return n/2 + 1;
        }
        return n/2;
    }
}

